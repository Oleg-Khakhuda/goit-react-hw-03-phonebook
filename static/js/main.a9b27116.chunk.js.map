{"version":3,"sources":["Phonebook/ContactForm/ContactForm.js","Phonebook/ContactsList/ContactsList.js","Phonebook/Filter/Filter.js","App.js","index.js","Phonebook/ContactForm/ContactForm.module.css","Phonebook/ContactsList/ContactsList.module.css","Phonebook/Filter/Filter.module.css"],"names":["ContactForm","state","name","number","inputNameId","uuidv4","inputNumberId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","addNewContact","resetForm","this","className","s","form","onSubmit","label","htmlFor","input","type","id","pattern","title","required","onChange","button","Component","ContactsList","handleDelete","list","contacts","map","contact","listItem","deleteButton","onClick","Filter","inputFilterId","changeFilter","App","filter","find","alert","prevState","target","handleFilter","normalizedFilter","toLowerCase","includes","localContacts","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a9b27116.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\n\r\nexport default class ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    inputNameId = uuidv4();\r\n    inputNumberId = uuidv4();\r\n\r\n    handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.addNewContact(this.state);\r\n        this.resetForm();\r\n    }\r\n\r\n    resetForm = () => {\r\n       this.setState({ name: '', number: '' });\r\n  };\r\n\r\n    render() {\r\n        const { handleSubmit, inputNameId, handleChange, inputNumberId } = this;\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form className={s.form} onSubmit={handleSubmit}>  \r\n            <label className={s.label} htmlFor={inputNameId}>Name</label>\r\n            <input\r\n                className={s.input}\r\n                type=\"text\"\r\n                value={name}\r\n                id={inputNameId}\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                onChange={handleChange}\r\n            />\r\n            <label className={s.label} htmlFor={inputNumberId}>Number</label>\r\n            <input\r\n                className={s.input}\r\n                type=\"tel\"\r\n                value={number}\r\n                id={inputNumberId}\r\n                name=\"number\"\r\n                pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                required\r\n                onChange={handleChange}\r\n            />\r\n                <button className={s.button} type='submit'>Add contact</button>\r\n            </form>\r\n       ) \r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport s from './ContactsList.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ContactsList extends Component{\r\n\r\n    render() {\r\n        const { handleDelete } = this.props\r\n        return (\r\n            <ul className={s.list}>        \r\n                {\r\n                    this.props.contacts.map(contact => (\r\n                     <li className={s.listItem}\r\n                        key={contact.id} >\r\n                        {contact.name}:  {contact.number}\r\n                        <button\r\n                            className={s.deleteButton}\r\n                            type=\"button\"\r\n                            id={contact.id}\r\n                            onClick={handleDelete}\r\n                        >Delete</button>\r\n                    </li>))\r\n                }\r\n        </ul>\r\n    )}\r\n\r\n}\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    handleDelete: PropTypes.func.isRequired,\r\n}","import  { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Filter.module.css';\r\n\r\nexport default class Filter extends Component {\r\n  inputFilterId = uuidv4()\r\n\r\n    render() {\r\n        const { inputFilterId } = this;\r\n        const { changeFilter } = this.props;\r\n        \r\n    return (\r\n        <form className={s.form}>\r\n            <label className={s.label} htmlFor={inputFilterId}>Find contacts by name</label>\r\n            <input\r\n                className={s.input}\r\n                type=\"text\"\r\n                id={inputFilterId}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                onChange={changeFilter}\r\n            />\r\n      </form>    \r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n","import ContactForm from './Phonebook/ContactForm/ContactForm';\nimport ContactsList from './Phonebook/ContactsList/ContactsList';\nimport Filter from './Phonebook/Filter/Filter';\nimport { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const localContacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(localContacts);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addNewContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts!`);\n    } else if (this.state.contacts.find(contact => contact.number === number)) {\n      alert(`${number} is already in contacts!`);\n    } else\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  handleFilter = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  handleDelete = e => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(\n        contact => contact.id !== e.target.id,\n      ),\n    }));\n  };\n\n  render() {\n    const { addNewContact, changeFilter, handleFilter, handleDelete } = this;\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addNewContact={addNewContact} />\n        <h1>Contacts</h1>\n        <Filter changeFilter={changeFilter} />\n        <ContactsList contacts={handleFilter()} handleDelete={handleDelete} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3NGff\",\"input\":\"ContactForm_input__lEZIs\",\"label\":\"ContactForm_label__hQKE1\",\"button\":\"ContactForm_button__1YZ6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__CQQUm\",\"listItem\":\"ContactsList_listItem__2lkBh\",\"deleteButton\":\"ContactsList_deleteButton__11fL4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__zAKFi\",\"label\":\"Filter_label__yFtou\",\"input\":\"Filter_input__367-E\"};"],"sourceRoot":""}